{"version":3,"sources":["components/auth/Signin.js","components/Input.js","components/SearchList.js","components/Button.js","Layout/Navbar.js","Layout/CategoryNav.js","components/Category.js","Layout/Loader.js","components/Main.js","components/SinglePost.js","components/Categories.js","Layout/Footer.js","components/Site.js","App.js","store/actions/PostsAction.js","serviceWorker.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Signin","state","email","password","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","require","authenticate","then","data","console","log","token","localStorage","setItem","catch","err","react_default","a","createElement","className","htmlFor","type","onChange","this","onClick","Component","Input","placeholder","props","input","handleInput","connect","dispatch","lists","posts","newList","stat","map","item","index","Link","key","to","slug","title","Button","Navbar","aria-hidden","components_Input","components_SearchList","categories","category","ownProps","match","params","category_slug","main_slug","postCategory","filter","cat","metadata","src","image","url","alt","length","dangerouslySetInnerHTML","__html","content","substring","Loader","Main","componentDidMount","catBar","document","querySelector","container","addEventListener","window","pageYOffset","classList","add","remove","postList","post","_id","LazyLoad_default","offsetVertical","snipped","slice","created_at","Layout_CategoryNav","page","components_Category","ads","post_slug","find","moment","format","Categories","Footer","href","Site","App","fetchPosts","BrowserRouter","Layout_Navbar","Switch","Route","path","exact","component","Category","SinglePost","bucket","process","REACT_APP_COSMIC_BUCKET","read_key","REACT_APP_COSMIC_READ_KEY","getObjects","Boolean","location","hostname","initState","link","postReducer","arguments","undefined","action","objects","type_slug","objectSpread","toLowerCase","search","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa8c6951.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../../css/Signin.css';\r\n// import { withRouter } from \"react-router-dom\";\r\n// import { Redirect } from 'react-router-dom'\r\nclass Signin extends Component {\r\n\r\n    state = {\r\n      email: null,\r\n      password: null\r\n    }\r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value // get data from input \r\n      });\r\n    }\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const Cosmic = require('cosmicjs')() // double parentheses to init function without token\r\n      Cosmic.authenticate({\r\n      email: this.state.email,\r\n      password: this.state.password\r\n      }).then(data => {\r\n        console.log(data.token);\r\n        localStorage.setItem(\"Token\", data.token);\r\n        // this.props.history.push(\"/\");\r\n         // save token to localstorage\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n     \r\n    }\r\n  render() {\r\n    return (\r\n      <div className=\"signin-container\"> \r\n        <h1 className=\"\">Login</h1>\r\n        <form className=\"login-form\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input type=\"email\" name=\"email\" onChange={this.handleChange}/>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input type=\"password\" name=\"password\" onChange={this.handleChange}/>\r\n          <button className=\"btn\" onClick={this.handleSubmit}><div className=\"overlay\"></div>Login</button>\r\n         \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// export default withRouter(Signin);\r\nexport default Signin;\r\n\r\n\r\n// email: 'qqd8jw5zrj6y@10minut.xyz',\r\n// pass: 'a'","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n class Input extends Component {\r\n  render() {\r\n    return (\r\n        <input type=\"text\"  placeholder=\"Search.. \" className=\"search-input\" value={this.props.input} onChange={this.props.handleInput}/>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        input: state.input\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        handleInput: (e) => {\r\n            dispatch({type:'SEARCH_INPUT', input:e.target.value})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/SearchList.css'\r\n function SearchList(props) {\r\n    \r\n  return (\r\n <div className=\"search-list\">\r\n       <div className=\"suggestions\"> \r\n         {\r\n           props.value && props.lists.map((item, index) => {\r\n                 return(\r\n                   <li>\r\n                        <Link key={index} to={'/' + item.slug}>\r\n                    <div className=\"it\">{item.title}</div>\r\n                    </Link> \r\n                   </li>\r\n                 )\r\n             })\r\n         }\r\n      </div>\r\n </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        lists: state.posts.newList,\r\n        value: state.posts.value,\r\n        stat: state.posts.stat\r\n     \r\n    }\r\n}\r\nexport default connect(mapStateToProps)(SearchList);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nexport default function Button(props) {\r\n  return (\r\n    <Link to={'/site'} ><button className=\"btn-join\">{props.title}</button></Link>\r\n  )\r\n}\r\n","import React, {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Input from '../components/Input';\r\nimport SearchList from '../components/SearchList';\r\nimport Button from '../components/Button';\r\nclass Navbar extends Component {\r\nrender(){\r\n  return (\r\n <div className=\"wrap-to-border\">\r\n        <div className=\"navbar-wrap\">\r\n        <div className=\"left-side\">\r\n            <h1 className=\"logo\"><Link to=\"/\">CosMedium</Link></h1>\r\n        </div>\r\n        <div className=\"right-side\">\r\n            <div className=\"search-wrap\">\r\n                <i className=\"fa fa-search fa-lg\" aria-hidden=\"true\" ></i>\r\n            <Input />\r\n               <SearchList/>\r\n             </div>\r\n            <Link to=\"/signin\" className=\"signin\">Sign in</Link>\r\n            <Button title={\"Get started\"} />\r\n        </div>\r\n    </div>\r\n </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default(Navbar);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {Link } from 'react-router-dom'\r\nfunction CategoryNav(props) {\r\n  return (\r\n    <div className=\"category-wrap\">\r\n      <ul className=\"category-list\">\r\n        {\r\n          props.categories && props.categories.map((category,key) =>{\r\n            return(\r\n              <Link  key={key} to={'/category/' + category.slug }> <li className=\"item\">{category.title}</li> </Link>\r\n            )\r\n        })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return{\r\n    categories : state.posts.categories\r\n  }\r\n}\r\nexport default connect(mapStateToProps) (CategoryNav)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../css/Category.css';\r\n\r\n function Category(props) {\r\n    \r\n  return (\r\n    <div>\r\n       {\r\n          props.postCategory &&  props.postCategory.map((item, index) => {\r\n            return(\r\n            <div key={index} className=\"main-category-wrap\">\r\n            {item && <img className=\"category-image\" src={item.metadata.image.url} alt={item.slug}/> }\r\n           <div className=\"category-text-wrap\">\r\n           <Link to={'/' + item.slug}> <h2>{item.title}</h2></Link> \r\n           { item.length < 300 ? \r\n           <p dangerouslySetInnerHTML={{__html:item.content}}></p> :\r\n           <p dangerouslySetInnerHTML={{__html:item.content.substring(0, 300)}}></p> \r\n           }\r\n           </div>\r\n            </div>\r\n            )\r\n\r\n          })\r\n          }\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps=(state, ownProps) => {\r\n    if(ownProps.match) {\r\n        var slug = ownProps.match.params.category_slug;\r\n    } else{\r\n        var main_slug = 'film'\r\n    }\r\n    \r\n    return{\r\n        postCategory:state.posts.posts.filter(cat => {\r\n            if(slug) return cat.metadata.category.slug ===  slug \r\n            else return cat.metadata.category.slug ===  main_slug       \r\n        })\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Category);","import React from 'react'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"loader-overlay\">\r\n      <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport CategoryNav from './../Layout/CategoryNav'\r\nimport '../css/Main.css';\r\nimport Category from './Category';\r\nimport Loader from '../Layout/Loader';\r\nimport Button from './Button';\r\nimport LazyLoad from 'react-lazy-load';\r\n class Main extends Component {\r\n\r\n  componentDidMount = () => {\r\n   const catBar = document.querySelector('.category-wrap');\r\n   const container = document.querySelector('.content-wrap');\r\n   document.addEventListener('scroll', () => {\r\n    //  console.log(\"inner height\", window.innerHeight, document.body.clientHeight,window.pageYOffset);\r\n     if(window.pageYOffset > 90 ) {\r\n      \r\n      container.classList.add('padding-sticky');\r\n      catBar.classList.add('sticky');\r\n     }\r\n     else{\r\n      container.classList.remove('padding-sticky');\r\n      catBar.classList.remove('sticky');\r\n      \r\n     }\r\n   \r\n   });\r\n  }\r\n\r\n  render() {\r\n  const { posts } = this.props;\r\n  const postList = posts.length ? (\r\n      posts.map((post)=> {\r\n          return(\r\n              <div key={post._id} className=\"card-wrap\">\r\n               <span className=\"pos\">\r\n               <LazyLoad  offsetVertical={1000} >\r\n               <img src={post.metadata.image.url} alt=\"\"/>\r\n               </LazyLoad>\r\n               </span>\r\n              <div className=\"card\">\r\n               <Link to={'/' + post.slug}> <h2 className=\"card-title\">{post.title}</h2></Link>\r\n          {post.metadata.snipped &&  post.metadata.snipped.length < 80 ?  <p className=\"card-body\" dangerouslySetInnerHTML={{__html:post.metadata.snipped}}></p> :\r\n           <p className=\"card-body\" dangerouslySetInnerHTML={{__html: post.metadata.snipped && post.metadata.snipped.slice(0,80)}}></p> \r\n        }\r\n               <span className=\"date\">{post.created_at}</span>\r\n                \r\n              </div>\r\n            </div>\r\n          )\r\n      })\r\n\r\n  ) \r\n  : \r\n  (\r\n      // <div className=\"text-center\"> No posts yet </div>\r\n     <Loader />\r\n  )\r\n  return (\r\n    <div>\r\n      <CategoryNav />\r\n      <div className=\"content-wrap\">\r\n        {postList}\r\n      </div>\r\n      <hr/>\r\n      {\r\n      this.props ?\r\n      <div className=\"page\">\r\n        <div className=\"page-overlay\">\r\n          <h1>{ this.props.page.title}</h1>\r\n          <p dangerouslySetInnerHTML={{__html:this.props.page.content}} ></p>\r\n          <Button title={\"See more\"} />\r\n        </div>\r\n        <LazyLoad offsetVertical={300} >\r\n          <img className=\"ads-image\" src={this.props.page.metadata? this.props.page.metadata.image.url : \"#\" } alt=\"img\"/>\r\n        </LazyLoad>\r\n        </div>\r\n        :\r\n        <p>No page</p>\r\n        }\r\n        <div>\r\n       { posts && <h2 className=\"category-title\">FILM</h2>}\r\n          <hr/>\r\n          <Category />\r\n        </div>\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return{\r\n    posts: state.posts.posts.slice(0,5),\r\n    page: state.posts.ads,\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Main);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport '../css/SinglePost.css';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n function SinglePost(props) {\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n     <div className=\"page-wrap\">\r\n     {props.post && <h3><Link to={'/category/' + props.post.metadata.category.slug }>{props.post.metadata.category.slug}</Link></h3> }\r\n     {props.post && <h1>{props.post.title}</h1> }\r\n     {props.post && <h4>{props.post.metadata.snipped}</h4> }\r\n     {props.post && <span className=\"date\">{ moment(props.post.created_at).format(\"MMM Do YY\")}</span> }\r\n     </div>\r\n     {props.post && <img className=\"figure\" src={props.post.metadata.image.url} alt=\"\"/>  }\r\n     {props.post && <p className=\"text-page\" dangerouslySetInnerHTML={{__html:props.post.content}}></p> }\r\n     <div className=\"side-bar\">\r\n        <div className=\"vote-container\">\r\n        <i className=\"fa fa-thumbs-o-up fa-2x\" aria-hidden=\"true\"></i> \r\n     <span className=\"vote\">(22) </span> \r\n     {/* required paiment plan to add post request to cosmic */}\r\n        </div>\r\n     </div>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps=(state, ownProps) => {\r\n    let slug = ownProps.match.params.post_slug;\r\n    return{\r\n        post:state.posts.posts.find(item => item.slug === slug )\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(SinglePost);","import React from 'react'\r\nimport CategoryNav from './../Layout/CategoryNav';\r\n function Categories(props) {\r\n    // props.history.push('/');\r\n  return (\r\n    <div>\r\n    <CategoryNav />\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default (Categories);","import React from 'react'\r\n\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n \r\n    <p>Powered by <a href=\"https://cosmicjs.com\">CosmicJs</a> created by <a href=\"https://github.com/3ndrius\">3ndrius</a> Inspired by <a href=\"https://medium.com/\">Medium</a> </p>\r\n    \r\n     \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Site() {\r\n  return (\r\n    <div className=\"site\">\r\n      Empty Site Component \r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Signin from './components/auth/Signin';\r\nimport Navbar from './Layout/Navbar';\r\nimport Main from './components/Main';\r\nimport { FetchPostsApi } from './store/actions/PostsAction';\r\nimport SinglePost from './components/SinglePost';\r\nimport Category from './components/Category';\r\nimport Categories from './components/Categories';\r\nimport Footer from './Layout/Footer';\r\n// import AddUser from './components/auth/AddUser';\r\nimport Site from './components/Site';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchPosts();\r\n \r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n            <div className=\"app-wrap\">\r\n            <Switch>\r\n              <Route path={'/' } exact component={Main} />\r\n              <Route path={'/signin'} exact component={Signin} />\r\n              {/* <Route path={'/add-user'} exact component={AddUser} /> */}\r\n              <Route path={'/category'} exact component={Categories} />\r\n              <Route path={'/site'} exact component={Site} />\r\n              \r\n              <Route path={'/category/:category_slug'} exact component={Category} />\r\n              <Route path={'/:post_slug'} exact component={SinglePost} />\r\n             \r\n            </Switch>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps= (dispatch) => {\r\n  return {\r\n    fetchPosts: () => {\r\n      dispatch(FetchPostsApi());\r\n    }\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps) (App);\r\n","export const FetchPostsApi = () => {\r\n    return (dispatch) => {\r\n            const Cosmic = require('cosmicjs')\r\n            var api = new Cosmic();\r\n            var bucket = api.bucket({\r\n              slug: process.env.REACT_APP_COSMIC_BUCKET || 'react-cosmedium-blog',\r\n              read_key: process.env.REACT_APP_COSMIC_READ_KEY || ''\r\n            })\r\n            bucket.getObjects().then(data => {          \r\n            dispatch({type:\"FETCH_POSTS\", data:data});            \r\n            }).catch(err => {\r\n              console.log(err)\r\n            })\r\n\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n  posts: [] ,\r\n  categories: [],\r\n  ads:[],\r\n  category: [],\r\n  link: null,\r\n  newList:[],\r\n  value:'',\r\n}\r\nconst postReducer = (state = initState, action) => {\r\n \r\n    switch(action.type) {\r\n        case 'FETCH_POSTS': \r\n      \r\n        const posts = action.data.objects.filter(item => {\r\n            return(item.type_slug === \"posts\") \r\n          });\r\n         \r\n        return{\r\n            ...state,\r\n            posts: posts,\r\n            categories: action.data.objects.filter(cat => {\r\n                return(cat.type_slug === \"categories\") \r\n              }),\r\n              ads: action.data.objects.find(name => {\r\n                return(name.type_slug === \"ads\") \r\n              }),\r\n            link: action.data.objects.find(name => {\r\n              return(name.type_slug === \"ads\") \r\n            })\r\n        }\r\n        case 'SEARCH_INPUT':\r\n        console.log('Search input');\r\n        let newList = state.posts.filter(item => {\r\n          return item.slug.toLowerCase().search(action.input.toLowerCase()) !== -1;      \r\n      }); \r\n        return{\r\n          ...state,\r\n          newList: newList,\r\n          value:action.input\r\n        }  \r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default postReducer;","\r\nimport { combineReducers } from 'redux'\r\nimport postReducer from './postReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: postReducer,\r\n   \r\n   \r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport { Provider} from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}